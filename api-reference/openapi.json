{
  "openapi": "3.1.0",
  "info": {
    "title": "apifordevs â€“ v1",
    "version": "1.0.0",
    "description": "Programmatic API for media conversion, Moondream vision tasks and (soon) Whisper transcript."
  },
  "servers": [
    { "url": "https://<your-domain>/api/v1" }
  ],
  "paths": {
    "/convert": {
      "post": {
        "summary": "Convert a media file to another format",
        "tags": ["convert"],
        "operationId": "convertMedia",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConvertRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversion completed (sync) or task started (async)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConvertResponse" }
              }
            }
          },
          "4XX": { "$ref": "#/components/responses/Error" },
          "5XX": { "$ref": "#/components/responses/Error" }
        }
      }
    },

    "/moondream/caption": {
      "post": {
        "summary": "Generate an image caption",
        "tags": ["moondream"],
        "operationId": "captionImage",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CaptionRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Caption generated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CaptionResponse" }
              }
            }
          },
          "4XX": { "$ref": "#/components/responses/Error" },
          "5XX": { "$ref": "#/components/responses/Error" }
        }
      }
    },

    "/moondream/detect": {
      "post": {
        "summary": "Detect objects present in an image",
        "tags": ["moondream"],
        "operationId": "detectObjects",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DetectRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Objects detected",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetectResponse" }
              }
            }
          },
          "4XX": { "$ref": "#/components/responses/Error" },
          "5XX": { "$ref": "#/components/responses/Error" }
        }
      }
    },

    "/moondream/point": {
      "post": {
        "summary": "Locate an object inside an image",
        "tags": ["moondream"],
        "operationId": "pointObject",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PointRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Points returned",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PointResponse" }
              }
            }
          },
          "4XX": { "$ref": "#/components/responses/Error" },
          "5XX": { "$ref": "#/components/responses/Error" }
        }
      }
    },

    "/moondream/query": {
      "post": {
        "summary": "Ask a question about an image",
        "tags": ["moondream"],
        "operationId": "queryImage",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/QueryRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Answer returned",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/QueryResponse" }
              }
            }
          },
          "4XX": { "$ref": "#/components/responses/Error" },
          "5XX": { "$ref": "#/components/responses/Error" }
        }
      }
    },

    "/transcript": {
      "post": {
        "summary": "Transcribe an audio file (coming soon)",
        "tags": ["transcript"],
        "operationId": "transcribeAudio",
        "security": [{ "apiKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TranscriptRequest" }
            }
          }
        },
        "responses": {
          "501": {
            "description": "Not implemented yet",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/responses/Error/content/application~1json/schema" }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },

    "schemas": {
      "ConvertRequest": {
        "type": "object",
        "required": ["input_type", "output_type"],
        "properties": {
          "input_type": { "type": "string", "example": "mov" },
          "output_type": { "type": "string", "example": "mp4" },
          "media_base64": { "type": "string", "description": "base64-encoded file" },
          "media_url": { "type": "string", "format": "uri" },
          "webhook_url": { "type": "string", "format": "uri" }
        }
      },
      "ConvertResponse": {
        "oneOf": [
          {
            "type": "object",
            "description": "Async call",
            "properties": {
              "success": { "type": "boolean", "example": true },
              "process": { "type": "string", "enum": ["running"] }
            }
          },
          {
            "type": "object",
            "description": "Sync result",
            "properties": {
              "url": { "type": "string", "format": "uri" },
              "size": { "type": "integer" }
            }
          }
        ]
      },

      "CaptionRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "image_base64": { "type": "string" },
          "image_url": { "type": "string", "format": "uri" },
          "length": { "type": "string", "enum": ["short", "normal"], "default": "normal" },
          "webhook_url": { "type": "string", "format": "uri" }
        }
      },
      "CaptionResponse": {
        "type": "object",
        "properties": { "caption": { "type": "string" } }
      },

      "DetectRequest": {
        "type": "object",
        "required": ["object"],
        "properties": {
          "image_base64": { "type": "string" },
          "image_url": { "type": "string", "format": "uri" },
          "object": { "type": "string", "example": "person" },
          "webhook_url": { "type": "string", "format": "uri" }
        }
      },
      "DetectResponse": {
        "type": "object",
        "properties": {
          "objects": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },

      "PointRequest": {
        "type": "object",
        "required": ["object"],
        "properties": {
          "image_base64": { "type": "string" },
          "image_url": { "type": "string", "format": "uri" },
          "object": { "type": "string", "example": "car" },
          "webhook_url": { "type": "string", "format": "uri" }
        }
      },
      "PointResponse": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "x": { "type": "number" },
                "y": { "type": "number" }
              }
            }
          }
        }
      },

      "QueryRequest": {
        "type": "object",
        "required": ["question"],
        "properties": {
          "image_base64": { "type": "string" },
          "image_url": { "type": "string", "format": "uri" },
          "question": { "type": "string", "example": "What color is the car?" },
          "webhook_url": { "type": "string", "format": "uri" }
        }
      },
      "QueryResponse": {
        "type": "object",
        "properties": { "answer": { "type": "string" } }
      },

      "TranscriptRequest": {
        "type": "object",
        "properties": {
          "audio_base64": { "type": "string" },
          "audio_url": { "type": "string", "format": "uri" },
          "language": { "type": "string", "default": "en" },
          "timestamps": { "type": "boolean", "default": false },
          "webhook_url": { "type": "string", "format": "uri" }
        }
      }
    },

    "responses": {
      "Error": {
        "description": "Error payload",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string" },
                "details": { "type": "object", "nullable": true }
              }
            }
          }
        }
      }
    }
  }
}